    1  vi kops.sh
    2  sh kops.sh 
    3  aws configure
    4  kops create cluster --name=mykube.k8s.local --state=s3://mykops1234 --zones=ap-south-1a --node-count=2 --node-size=t2.medium --master-size=t2.medium --yes
    5  mkdir myapp
    6  cd myapp/
    7  ls
    8  cd
    9  vi .bashrc 
   10  source .bashrc 
   11  cd myapp/
   12  kubectl run test-pod --image nginx:latest --port 80 --dry-run=client -o yaml
   13  kops validate cluster --name mykube.k8s.local --state=s3://mykops1234
   14  kubectl run test-pod --image nginx:latest --port 80 --dry-run=client -o yaml
   15  kubectl run test-pod --image nginx:latest --port 80 --dry-run=client -o yaml > pod.yaml
   16  vi pod.yaml 
   17  kops validate cluster --name mykube.k8s.local --state=s3://mykops1234
   18  kubectl create -f pod.yaml 
   19  kubectl get pod
   20  kubectl describe pod mypod 
   21  kubectl get pod
   22  kubectl get nodes
   23  kubectl get pod -o wide
   24  kubectl describe pod mypod 
   25  kubectl get pod 
   26  kubectl get pod --show-labels 
   27  kubectl expose pod mypod --type NodePort --dry-run=client -o yaml
   28  kubectl expose pod mypod --type NodePort --dry-run=client -o yaml >> pod.yaml 
   29  vi pod.yaml 
   30  kubectl expose pod mypod --type NodePort --dry-run=client -o yaml > svc.yaml
   31  vi svc.yaml 
   32  kubectl get svc
   33  vi svc.yaml 
   34  kubectl create -f svc.yaml 
   35  kubectl get svc
   36  vi svc.yaml 
   37  kubectl create -f svc.yaml 
   38  kubectl delete -f svc.yaml 
   39  vi svc.yaml 
   40  kubectl create -f svc.yaml 
   41  kubectl get svc
   42  kubectl delete -f svc.yaml 
   43  kubectl create -f svc.yaml 
   44  kubectl get svc
   45  vi svc.yaml 
   46  kubectl get pod
   47  kubectl get po
   48  kubectl get pods
   49  ls
   50  cp pod.yaml svc.yaml /home/ubuntu/
   51  vi pod.yaml 
   52  kubectl get pod
   53  vi pod.yaml 
   54  kubectl get pod
   55  vi pod.yaml 
   56  kubectl describe pod mypod 
   57  vi pod.yaml 
   58  kubectl get pod
   59  kubectl describe pod mypod 
   60  kubectl get nodes
   61  cp pod.yaml man-schedule.yaml
   62  vi man-schedule.yaml 
   63  kubectl get pod -o wide
   64  vi man-schedule.yaml 
   65  kubectl create -f man-schedule.yaml 
   66  vi man-schedule.yaml 
   67  kubectl c
   68  vi man-schedule.yaml 
   69  kubectl get pod -o wide
   70  kubectl describe pod man-pod 
   71  kubectl get pod -o wide
   72  kubectl delete -f man-schedule.yaml 
   73  vi man-schedule.yaml 
   74  kubectl create -f man-schedule.yaml 
   75  kubectl get pod -o wide
   76  kubectl describe pod man-pod 
   77  kubectl get pod -o wide
   78  vi man-schedule.yaml 
   79  kubectl get nodes
   80  vi pod.yaml 
   81  vi svc.yaml 
   82  vi pod.yaml 
   83  vi man-schedule.yaml 
   84  kubectl get nodes --show-labels 
   85  kubectl get nodes 
   86  kubectl label nodes ip-172-20-45-111.ap-south-1.compute.internal cpu=ryzen
   87  kubectl get nodes --show-labels 
   88  kubectl label nodes ip-172-20-45-111.ap-south-1.compute.internal cpu=ryzen, memory=16
   89  kubectl label nodes ip-172-20-45-111.ap-south-1.compute.internal cpu=ryzen, memory=best
   90  kubectl label nodes ip-172-20-45-111.ap-south-1.compute.internal cpu=ryzen
   91  kubectl get nodes --show-labels 
   92  kubectl get nodes --show-labels | grep cpu=
   93  kubectl get nodes --show-labels | grep cpu=ryzen
   94  cp pod.yaml node-sel.yaml
   95  vi node-sel.yaml 
   96  kubectl create -f node-sel.yaml 
   97  vi pod.yaml 
   98  vi node-sel.yaml 
   99  kubectl create -f node-sel.yaml 
  100  kubectl get pod
  101  kubectl describe pod pod-nodesel 
  102  kubectl get pod
  103  kubectl get nodes
  104  kubectl delete -f node-sel.yaml 
  105  kubectl label nodes ip-172-20-45-111.ap-south-1.compute.internal cpu-
  106  kubectl create -f node-sel.yaml 
  107  kubectl get pod
  108  kubectl describe pod pod-nodesel 
  109  kubectl get pod
  110  kubectl label nodes ip-172-20-45-111.ap-south-1.compute.internal cpu=ryzen
  111  kubectl get pod
  112  history 
  113  cd ..
  114  mv myapp/ /home/ubuntu/
  115  cd /home/ubuntu/myapp/
  116  ls
  117  history 
  118  vi man-schedule.yaml 
  119  kubectl get nodes
  120  vi pod.yaml 
  121  vi node-sel.yaml 
  122  cp pod.yaml nodeaffpref.yaml
  123  kubectl get nodes --show-labels 
  124  vi pod.yaml 
  125  vi nodeaffpref.yaml 
  126  kubectl create -f nodeaffpref.yaml 
  127  kubectl get pod
  128  kubectl get nodes --show-labels | grep cpu
  129  kubectl get pod -o wide
  130  vi nodeaffpref.yaml 
  131  kubectl label nodes ip-172-20-45-111.ap-south-1.compute.internal cpu-
  132  kubectl get pod
  133  kubectl create -f nodeaffpref.yaml 
  134  kubectl delete -f nodeaffpref.yaml 
  135  kubectl create -f nodeaffpref.yaml 
  136  kubectl get pod
  137  kubectl get nodes --show-labels | grep cpu=ryzen
  138  kubectl get pod -o wide
  139  kubectl label nodes ip-172-20-45-111.ap-south-1.compute.internal cpu=ryzen
  140  cp nodeaffpref.yaml node-Anti-aff-pref.yaml 
  141  vi node-Anti-aff-pref.yaml 
  142  kubectl create -f node-Anti-aff-pref.yaml
  143  kubectl get pod -o wide
  144  kubectl get nodes --show-labels | grep cpu=ryzen
  145  kubectl get nodes --selector cpu=ryzen
  146  cd ..
  147  cd
  148  mkdir myapp
  149  ls
  150  cd myapp/
  151  ls
  152  git clone https://github.com/aneeshansaricloud/CT-new.git
  153  ls
  154  cd CT-new/
  155  ls
  156  git remote add git@github.com:aneeshansaricloud/CT-new.git
  157  git remote add origin git@github.com:aneeshansaricloud/CT-new.git
  158  git remote remove origin 
  159  git remote add origin git@github.com:aneeshansaricloud/CT-new.git
  160  git remote 
  161  git remote --help
  162  ls
  163  ssh-keygen 
  164  cd 
  165  cd .ssh/
  166  ls
  167  cat tid_rsa
  168  cat id_rsa
  169  cat id_rsa.pub 
  170  cd 
  171  cd myapp/CT-new/
  172  ls
  173  touch test.yaml
  174  ls
  175  cd
  176  cd .ssh/
  177  ls
  178  rm id*
  179  ls
  180  cd
  181  cd myapp/CT-new/
  182  #ssh-keygen -t ed25519 -C "aneeshansaricloud@gmail.com"
  183  ssh-keygen -t ed25519 -C "aneeshansaricloud@gmail.com"
  184  eval "$(ssh-agent -s)"
  185  cd
  186  cd .ssh/
  187  ls
  188  ca t id_ed25519.pub 
  189  cat id_ed25519.pub 
  190  cd 
  191  cd myapp/CT-new/
  192  git add .
  193  git commit -m "abc"
  194  git config --global --edit
  195  git commit -m "abc"
  196  git push -u origin
  197  git branch -M 
  198  git branch -M main
  199  git push origin main
  200  ls
  201  vi gitt.sh
  202  ci test.yaml 
  203  vi test.yaml 
  204  sh gitt.sh abc
  205  ls
  206  vi pod.yaml node-aff-req.yaml
  207  cp pod.yaml node-aff-req.yaml
  208  vi node-aff-req.yaml
  209  kubectl create -f node-aff-req.yaml
  210  vi node-aff-req.yaml
  211  kubectl create -f node-aff-req.yaml
  212  kubectl get pod
  213  kubectl get pod -o wide
  214  kubectl get nodes --show-labels | grep cpu
  215  kubectl label nodes ip-172-20-45-111.ap-south-1.compute.internal cpu-
  216  kubectl get pod -o wide
  217  kubectl delete -f node-aff-req.yaml 
  218  kubectl get pod -o wide
  219  kubectl create -f node-aff-req.yaml 
  220  kubectl get pod -o wide
  221  kubectl label nodes ip-172-20-45-111.ap-south-1.compute.internal cpu=ryzen
  222  kubectl get pod -o wide
  223  vi node-aff-req.yaml 
  224  kubectl get pod -o wide
  225  kubectl delete pod node-aff-req
  226  kubectl create -f node-aff-req.yaml 
  227  kubectl get pod -o wide
  228  kubectl get nodes --show-labels | grep cpu
  229  vi node-aff-req.yaml 
  230  cd myapp/CT-new/
  231  ls
  232  vi pod-aff-pre.yaml
  233  cp pod.yaml pod-aff-pre.yaml
  234  vi pod-aff-pre.yaml
  235  kubectl get pod
  236  kubectl delete -f .
  237  kubectl get pod
  238  vi pod.yaml 
  239  kubectl create -f pod.yaml 
  240  kubectl get pod -o wide
  241  vi pod-aff-pre.yaml 
  242  kubectl get pod --show-labels 
  243  vi pod-aff-pre.yaml 
  244  kubectl get nodes 
  245  kubectl get nodes --show-labels 
  246  vi pod-aff-pre.yaml 
  247  kubectl create -f pod-aff-pre.yaml 
  248  vi pod-aff-pre.yaml 
  249  kubectl create -f pod-aff-pre.yaml 
  250  kubectl get pod -o wide
  251  kubectl delete -f pod-aff-pre.yaml 
  252  vi pod-aff-pre.yaml 
  253  cp pod-aff-pre.yaml pod-anti-aff-pre.yaml 
  254  vi pod-anti-aff-pre.yaml 
  255  kubectl create -f pod-anti-aff-pre.yaml 
  256  kubectl get pod -o wide
  257  ls
  258  sh gitt.sh abc
  259  kubectl get nodes
  260  kubectl describe nodes ip-172-20-60-238.ap-south-1.compute.internal
  261  kubectl describe nodes ip-172-20-60-238.ap-south-1.compute.internal | grep "Taint"
  262  kubectl get nodes
  263  kubectl describe nodes ip-172-20-60-238.ap-south-1.compute.internal | grep "Taint"
  264  kubectl describe nodes ip-172-20-51-211.ap-south-1.compute.internal | grep "Taint"
  265  kubectl describe nodes ip-172-20-45-111.ap-south-1.compute.internal | grep "Taint"
  266  cd myapp/CT-new/
  267  ls
  268  history > cmd.txt 
  269  ./gitt.sh "cmd"
  270  vi replicaset.yaml 
  271  history > cmd.txt 
kubectl get replicasets.apps

 kubectl get replicationcontrollers
kubectl scale replicaset myrs --replicas 5
    1  vi kops.sh
    2  vi kops.sh
    3  rm .kops.sh.swp 
    4  sh kops.sh 
    5  #kops create cluster --name=aneesh-mykube.k8s.local --state=s3://aneesh-mykops123 --zones=ap-south-1a --node-count=2 --node-size=t2.medium --master-size=t2.medium --yes
    6  kops create cluster --name=aneesh-mykube.k8s.local --state=s3://aneesh-mykops123 --zones=ap-south-1a --node-count=2 --node-size=t2.medium --master-size=t2.medium --yes
    7  aws configure
    8  kops create cluster --name=aneesh-mykube.k8s.local --state=s3://aneesh-mykops123 --zones=ap-south-1a --node-count=2 --node-size=t2.medium --master-size=t2.medium --yes
    9  kops dele cluster --name=aneesh-mykube.k8s.local --state=s3://aneesh-mykops123  --yes
   10  kops delete cluster --name=aneesh-mykube.k8s.local --state=s3://aneesh-mykops123  --yes
   11  aws configure
   12  kops create cluster --name=aneesh-mykube.k8s.local --state=s3://aneesh-mykops123 --zones=ap-south-1a --node-count=2 --node-size=t2.medium --master-size=t2.medium --yes
   13  aws configure
   14  kops create cluster --name=aneesh-mykube.k8s.local --state=s3://aneesh-mykops123 --zones=ap-south-1a --node-count=2 --node-size=t2.medium --master-size=t2.medium --yes
   15  kops delete cluster --name=aneesh-mykube.k8s.local --state=s3://aneesh-mykops123  --yes
   16  kops create cluster --name=aneesh-mykube.k8s.local --state=s3://aneesh-mykops123 --zones=ap-south-1a --node-count=2 --node-size=t2.medium --master-size=t2.medium --yes
   17  mkdir myapp
   18  cd myapp/
   19  git clone git@github.com:aneeshansaricloud/CT-new.git
   20  #ssh-keygen -t ed25519 -C "aneeshansaricloud@gmail.com"
   21  ssh-keygen -t ed25519 -C "aneeshansaricloud@gmail.com"
   22  cd 
   23  cd .ssh/
   24  cat id_ed25519.pub 
   25  cd -
   26  cd myapp/
   27  ls
   28  cd 
   29  ls
   30  cd myapp/
   31  ls
   32  #ssh-keygen -t ed25519 -C "aneeshansaricloud@gmail.com"
   33  git clone git@github.com:aneeshansaricloud/CT-new.git
   34  ls
   35  cd CT-new/
   36  ls
   37  vi test.yaml 
   38  ./gitt.sh 
   39  vi test.yaml 
   40  ./gitt.sh 
   41  ./gitt.sh "blabla"
   42  kubectl get nodes
   43  cd
   44  vi .bashrc 
   45  source .bashrc 
   46  kubectl get nodes
   47  ls
   48  cd myapp/CT-new/
   49  ls
   50  vi rc.yaml 
   51  vi replicaset.yaml 
   52  cp replicaset.yaml deployment.yaml
   53  vi deployment.yaml 
   54  vi rc.yaml 
   55  vi replicaset.yaml 
   56  vi deployment.yaml 
   57  kubectl create -f deployment.yaml 
   58  kubectl get pod
   59  kubectl delete -f deployment.yaml 
   60  kubectl create -f pod.yaml 
   61  kubectl get pod --show-labels 
   62  kubectl delete -f pod.yaml 
   63  vi pod.yaml 
   64  kubectl create -f pod.yaml 
   65  kubectl get pod --show-labels 
   66  vi deployment.yaml 
   67  kubectl create -f deployment.yaml 
   68  kubectl get deployments.apps 
   69* 
   70  kubectl get pod
   71  kubectl get deployments.apps --show-labels 
   72  kubectl get pod --show-labels 
   73  kubectl get replicasets.apps 
   74  kubectl get deployments.apps -o wide
   75  kubectl describe deployments.apps mydep 
   76  kubectl describe replicasets.apps mydep-646c7fb474 
   77  kubectl describe pod mydep-646c7fb474-564d7
   78  kubectl get deployments.apps -o wide
   79  kubectl get svc
   80  history 
   81  kubectl get deployments.apps -o wide
   82  kubectl set image deployment mydep con1=nginx:latest --record
   83  kubectl get deployments.apps -o wide
   84  kubectl get pod 
   85  kubectl get replicasets.apps 
   86  kubectl describe replicasets.apps mydep-646c7fb474
   87  kubectl get replicasets.apps 
   88  kubectl rollout history deployment mydep 
   89  kubectl rollout history deployment mydep --revision 1
   90  kubectl rollout history deployment mydep --revision 2
   91  kubectl rollout history deployment mydep 
   92  kubectl rollout undo deployment mydep --to-revision 1
   93  kubectl rollout history deployment mydep 
   94  kubectl get deployments.apps -o wide
   95  kubectl get replicasets.apps 
   96  kubectl get pod
   97  vi deployment.yaml 
   98  kubectl delete -f deployment.yaml 
   99  vi deployment.yaml 
  100  kubectl delete -f deployment.yaml 
  101  kubectl create -f deployment.yaml 
  102  kubectl set image deployment mydep con1=nginx:latest 
  103  kubectl rollout history deployment mydep 
  104  kubectl annotate deployments.apps mydep kubernetes.io/change-cause="updating to nginx v1.2"
  105  kubectl rollout history deployment mydep 
  106  vi deployment.yaml 
  107  kubectl edit deployments.apps mydep 
  108  kubectl rollout history deployment mydep 
  109  kubectl get replicasets.apps 
  110  kubectl get pod
  111  kubectl get replicasets.apps 
  112  history >> cmd.txt 
    1  vi kops.sh
    2  vi kops.sh
    3  rm .kops.sh.swp 
    4  sh kops.sh 
    5  #kops create cluster --name=aneesh-mykube.k8s.local --state=s3://aneesh-mykops123 --zones=ap-south-1a --node-count=2 --node-size=t2.medium --master-size=t2.medium --yes
    6  kops create cluster --name=aneesh-mykube.k8s.local --state=s3://aneesh-mykops123 --zones=ap-south-1a --node-count=2 --node-size=t2.medium --master-size=t2.medium --yes
    7  aws configure
    8  kops create cluster --name=aneesh-mykube.k8s.local --state=s3://aneesh-mykops123 --zones=ap-south-1a --node-count=2 --node-size=t2.medium --master-size=t2.medium --yes
    9  kops dele cluster --name=aneesh-mykube.k8s.local --state=s3://aneesh-mykops123  --yes
   10  kops delete cluster --name=aneesh-mykube.k8s.local --state=s3://aneesh-mykops123  --yes
   11  aws configure
   12  kops create cluster --name=aneesh-mykube.k8s.local --state=s3://aneesh-mykops123 --zones=ap-south-1a --node-count=2 --node-size=t2.medium --master-size=t2.medium --yes
   13  aws configure
   14  kops create cluster --name=aneesh-mykube.k8s.local --state=s3://aneesh-mykops123 --zones=ap-south-1a --node-count=2 --node-size=t2.medium --master-size=t2.medium --yes
   15  kops delete cluster --name=aneesh-mykube.k8s.local --state=s3://aneesh-mykops123  --yes
   16  kops create cluster --name=aneesh-mykube.k8s.local --state=s3://aneesh-mykops123 --zones=ap-south-1a --node-count=2 --node-size=t2.medium --master-size=t2.medium --yes
   17  mkdir myapp
   18  cd myapp/
   19  git clone git@github.com:aneeshansaricloud/CT-new.git
   20  #ssh-keygen -t ed25519 -C "aneeshansaricloud@gmail.com"
   21  ssh-keygen -t ed25519 -C "aneeshansaricloud@gmail.com"
   22  cd 
   23  cd .ssh/
   24  cat id_ed25519.pub 
   25  cd -
   26  cd myapp/
   27  ls
   28  cd 
   29  ls
   30  cd myapp/
   31  ls
   32  #ssh-keygen -t ed25519 -C "aneeshansaricloud@gmail.com"
   33  git clone git@github.com:aneeshansaricloud/CT-new.git
   34  ls
   35  cd CT-new/
   36  ls
   37  vi test.yaml 
   38  ./gitt.sh 
   39  vi test.yaml 
   40  ./gitt.sh 
   41  ./gitt.sh "blabla"
   42  kubectl get nodes
   43  cd
   44  vi .bashrc 
   45  source .bashrc 
   46  kubectl get nodes
   47  ls
   48  cd myapp/CT-new/
   49  ls
   50  vi rc.yaml 
   51  vi replicaset.yaml 
   52  cp replicaset.yaml deployment.yaml
   53  vi deployment.yaml 
   54  vi rc.yaml 
   55  vi replicaset.yaml 
   56  vi deployment.yaml 
   57  kubectl create -f deployment.yaml 
   58  kubectl get pod
   59  kubectl delete -f deployment.yaml 
   60  kubectl create -f pod.yaml 
   61  kubectl get pod --show-labels 
   62  kubectl delete -f pod.yaml 
   63  vi pod.yaml 
   64  kubectl create -f pod.yaml 
   65  kubectl get pod --show-labels 
   66  vi deployment.yaml 
   67  kubectl create -f deployment.yaml 
   68  kubectl get deployments.apps 
   69  kubectl get pod
   70  kubectl get deployments.apps --show-labels 
   71  kubectl get pod --show-labels 
   72  kubectl get replicasets.apps 
   73  kubectl get deployments.apps -o wide
   74  kubectl describe deployments.apps mydep 
   75  kubectl describe replicasets.apps mydep-646c7fb474 
   76  kubectl describe pod mydep-646c7fb474-564d7
   77  kubectl get deployments.apps -o wide
   78  kubectl get svc
   79  history 
   80  kubectl get deployments.apps -o wide
   81  kubectl set image deployment mydep con1=nginx:latest --record
   82  kubectl get deployments.apps -o wide
   83  kubectl get pod 
   84  kubectl get replicasets.apps 
   85  kubectl describe replicasets.apps mydep-646c7fb474
   86  kubectl get replicasets.apps 
   87  kubectl rollout history deployment mydep 
   88  kubectl rollout history deployment mydep --revision 1
   89  kubectl rollout history deployment mydep --revision 2
   90  kubectl rollout history deployment mydep 
   91  kubectl rollout undo deployment mydep --to-revision 1
   92  kubectl rollout history deployment mydep 
   93  kubectl get deployments.apps -o wide
   94  kubectl get replicasets.apps 
   95  kubectl get pod
   96  vi deployment.yaml 
   97  kubectl delete -f deployment.yaml 
   98  vi deployment.yaml 
   99  kubectl delete -f deployment.yaml 
  100  kubectl create -f deployment.yaml 
  101  kubectl set image deployment mydep con1=nginx:latest 
  102  kubectl rollout history deployment mydep 
  103  kubectl annotate deployments.apps mydep kubernetes.io/change-cause="updating to nginx v1.2"
  104  kubectl rollout history deployment mydep 
  105  vi deployment.yaml 
  106  kubectl edit deployments.apps mydep 
  107  kubectl rollout history deployment mydep 
  108  kubectl get replicasets.apps 
  109  kubectl get pod
  110  kubectl get replicasets.apps 
  111  history >> cmd.txt 
  112  ./gitt.sh "deployment"
  113  cd myapp/CT-new/
  114  ls
  115  cp deployment.yaml liv-exec.yaml
  116  vi liv-exec.yaml 
  117  kubectl create -f liv-exec.yaml 
  118  vi liv-exec.yaml 
  119  kubectl create -f liv-exec.yaml 
  120  kubectl get pod
  121  kubectl describe pod mydep-liv-exec-6bf6d5cb44-cc74t
  122  kubectl get pod
  123  vi liv-exec.yaml 
  124  kubectl get pod
  125  kubectl exec -it mydep-liv-exec-6bf6d5cb44-cc74t -- bash
  126  kubectl delete -f liv-exec.yaml 
  127  vi liv-exec.yaml 
  128  kubectl create -f liv-exec.yaml 
  129  kubectl get pod
  130  kubectl describe pod mydep-liv-exec-778577c567-79wq6
  131  kubectl get pod
  132  kubectl describe pod mydep-liv-exec-778577c567-79wq6
  133  kubectl get pod
  134  kubectl delete -f liv-exec.yaml 
  135  cp liv-exec.yaml liv-http.yaml 
  136  vi liv-http.yaml 
  137  kubectl create -f liv-http.yaml 
  138  vi liv-http.yaml 
  139  kubectl create -f liv-http.yaml 
  140  vi liv-http.yaml 
  141  kubectl create -f liv-http.yaml 
  142  kubectl get pod
  143  kubectl describe pod mydep-liv-http-58995569d-mqw4m
  144  kubectl delete -f liv-http.yaml 
  145  vi liv-http.yaml 
  146  kubectl create -f liv-http.yaml 
  147  kubectl get pod
  148  kubectl describe pod mydep-liv-http-565cb7c998-27nh2
  149  kops export aneesh-mykube.k8s.local --admin
  150  history | grep "kops"
  151  kops export aneesh-mykube.k8s.local --admin --state=s3://aneesh-mykops123
  152  kops export kubeconfig aneesh-mykube.k8s.local --admin --state=s3://aneesh-mykops123
  153  kubectl get pod
  154  kubectl delete -f liv-http.yaml 
  155  vi liv-http.yaml 
  156  kubectl get pod
  157  kubectl create -f liv-http.yaml 
  158  kubectl get pod
  159  kubectl describe pod mydep-liv-http-565cb7c998-dc9c6
  160  kubectl get pod
  161  kubectl delete -f liv-http.yaml 
  162  cp liv-http.yaml liv-tcp.yaml
  163  vi liv-tcp.yaml
  164  kubectl create -f liv-tcp.yaml 
  165  kubectl get pod
  166  vi liv-tcp.yaml 
  167  vi liv-http.yaml 
  168  vi liv-exec.yaml 
  169  kubectl create -f liv-exec.yaml 
  170  kubectl get pod
  171  kubectl describe pod mydep-liv-exec-54fd7cb946-2qws5
  172  vi liv-exec.yaml 
  173  history >> cmd.txt 
    1  vi kops.sh
    2  vi kops.sh
    3  rm .kops.sh.swp 
    4  sh kops.sh 
    5  #kops create cluster --name=aneesh-mykube.k8s.local --state=s3://aneesh-mykops123 --zones=ap-south-1a --node-count=2 --node-size=t2.medium --master-size=t2.medium --yes
    6  kops create cluster --name=aneesh-mykube.k8s.local --state=s3://aneesh-mykops123 --zones=ap-south-1a --node-count=2 --node-size=t2.medium --master-size=t2.medium --yes
    7  aws configure
    8  kops create cluster --name=aneesh-mykube.k8s.local --state=s3://aneesh-mykops123 --zones=ap-south-1a --node-count=2 --node-size=t2.medium --master-size=t2.medium --yes
    9  kops dele cluster --name=aneesh-mykube.k8s.local --state=s3://aneesh-mykops123  --yes
   10  kops delete cluster --name=aneesh-mykube.k8s.local --state=s3://aneesh-mykops123  --yes
   11  aws configure
   12  kops create cluster --name=aneesh-mykube.k8s.local --state=s3://aneesh-mykops123 --zones=ap-south-1a --node-count=2 --node-size=t2.medium --master-size=t2.medium --yes
   13  aws configure
   14  kops create cluster --name=aneesh-mykube.k8s.local --state=s3://aneesh-mykops123 --zones=ap-south-1a --node-count=2 --node-size=t2.medium --master-size=t2.medium --yes
   15  kops delete cluster --name=aneesh-mykube.k8s.local --state=s3://aneesh-mykops123  --yes
   16  kops create cluster --name=aneesh-mykube.k8s.local --state=s3://aneesh-mykops123 --zones=ap-south-1a --node-count=2 --node-size=t2.medium --master-size=t2.medium --yes
   17  mkdir myapp
   18  cd myapp/
   19  git clone git@github.com:aneeshansaricloud/CT-new.git
   20  #ssh-keygen -t ed25519 -C "aneeshansaricloud@gmail.com"
   21  ssh-keygen -t ed25519 -C "aneeshansaricloud@gmail.com"
   22  cd 
   23  cd .ssh/
   24  cat id_ed25519.pub 
   25  cd -
   26  cd myapp/
   27  ls
   28  cd 
   29  ls
   30  cd myapp/
   31  ls
   32  #ssh-keygen -t ed25519 -C "aneeshansaricloud@gmail.com"
   33  git clone git@github.com:aneeshansaricloud/CT-new.git
   34  ls
   35  cd CT-new/
   36  ls
   37  vi test.yaml 
   38  ./gitt.sh 
   39  vi test.yaml 
   40  ./gitt.sh 
   41  ./gitt.sh "blabla"
   42  kubectl get nodes
   43  cd
   44  vi .bashrc 
   45  source .bashrc 
   46  kubectl get nodes
   47  ls
   48  cd myapp/CT-new/
   49  ls
   50  vi rc.yaml 
   51  vi replicaset.yaml 
   52  cp replicaset.yaml deployment.yaml
   53  vi deployment.yaml 
   54  vi rc.yaml 
   55  vi replicaset.yaml 
   56  vi deployment.yaml 
   57  kubectl create -f deployment.yaml 
   58  kubectl get pod
   59  kubectl delete -f deployment.yaml 
   60  kubectl create -f pod.yaml 
   61  kubectl get pod --show-labels 
   62  kubectl delete -f pod.yaml 
   63  vi pod.yaml 
   64  kubectl create -f pod.yaml 
   65  kubectl get pod --show-labels 
   66  vi deployment.yaml 
   67  kubectl create -f deployment.yaml 
   68  kubectl get deployments.apps 
   69  kubectl get pod
   70  kubectl get deployments.apps --show-labels 
   71  kubectl get pod --show-labels 
   72  kubectl get replicasets.apps 
   73  kubectl get deployments.apps -o wide
   74  kubectl describe deployments.apps mydep 
   75  kubectl describe replicasets.apps mydep-646c7fb474 
   76  kubectl describe pod mydep-646c7fb474-564d7
   77  kubectl get deployments.apps -o wide
   78  kubectl get svc
   79  history 
   80  kubectl get deployments.apps -o wide
   81  kubectl set image deployment mydep con1=nginx:latest --record
   82  kubectl get deployments.apps -o wide
   83  kubectl get pod 
   84  kubectl get replicasets.apps 
   85  kubectl describe replicasets.apps mydep-646c7fb474
   86  kubectl get replicasets.apps 
   87  kubectl rollout history deployment mydep 
   88  kubectl rollout history deployment mydep --revision 1
   89  kubectl rollout history deployment mydep --revision 2
   90  kubectl rollout history deployment mydep 
   91  kubectl rollout undo deployment mydep --to-revision 1
   92  kubectl rollout history deployment mydep 
   93  kubectl get deployments.apps -o wide
   94  kubectl get replicasets.apps 
   95  kubectl get pod
   96  vi deployment.yaml 
   97  kubectl delete -f deployment.yaml 
   98  vi deployment.yaml 
   99  kubectl delete -f deployment.yaml 
  100  kubectl create -f deployment.yaml 
  101  kubectl set image deployment mydep con1=nginx:latest 
  102  kubectl rollout history deployment mydep 
  103  kubectl annotate deployments.apps mydep kubernetes.io/change-cause="updating to nginx v1.2"
  104  kubectl rollout history deployment mydep 
  105  vi deployment.yaml 
  106  kubectl edit deployments.apps mydep 
  107  kubectl rollout history deployment mydep 
  108  kubectl get replicasets.apps 
  109  kubectl get pod
  110  kubectl get replicasets.apps 
  111  history >> cmd.txt 
  112  ./gitt.sh "deployment"
  113  cd myapp/CT-new/
  114  ls
  115  kubectl delete -f deployment.yaml 
  116  vi deployment.yaml 
  117  kubectl create -f deployment.yaml 
  118  kubectl get deployments.apps 
  119  kubectl ge tpod
  120  kubectl get pod
  121  kubectl get rs
  122  vi deployment.yaml 
  123  kubectl apply -f deployment.yaml 
  124  kubectl get deployments.apps 
  125  kubectl get rs
  126  kubectl get pod
  127  vi deployment.yaml 
  128  kubectl edit deployments.apps mydep 
  129  vi deployment.yaml 
  130  kubectl get deployments.apps -o wide
  131  kubectl get pod -o wide
  132  kubectl get deployments.apps 
  133  kubectl scale deployment mydep --replicas 8
  134  kubectl get deployments.apps 
  135  kubectl get pod
  136  kubectl scale deployment mydep --replicas 2
  137  kubectl get pod
  138  kubectl autoscale deployment mydep --min 3 --max 10 --cpu-percent 70 --dry-run=clinet -o yaml >> myapp/CT-new/deployment.yaml 
  139  kubectl autoscale deployment mydep --min 3 --max 10 --cpu-percent 70 --dry-run=client -o yaml >> myapp/CT-new/deployment.yaml 
  140  cd myapp/CT-new/
  141  vi deployment.yaml 
  142  kubectl autoscale deployment mydep --min 3 --max 10 --cpu-percent 70
  143  kubectl get hpa
  144  vi deployment.yaml 
  145  cd myapp/CT-new/
  146  ls
  147  vi deployment.yaml 
  148  kubectl get pod 
  149  kubectl describe pod mydep-646c7fb474-2bw6z
  150  vi deployment.yaml 
  151  kubectl delete -f deployment.yaml 
  152  kubectl create -f deployment.yaml 
  153  vi deployment.yaml 
  154  kubectl get pod
  155  kubectl describe pod mydep-5769978bd5-7vljz
  156  kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml
  157  kubectl get pod -n kube-system 
  158  kubectl get hpa
  159  kubectl get pod
  160  kubectl delete -f deployment.yaml 
  161  cd myapp/CT-new/
  162  ls
  163  cd myapp/CT-new/
  164  vi deployment.yaml 
  165  cd myapp/CT-new/
  166  vi k-dep.yaml
  167  vi k-dep.yaml
  168  kubectl create -f k-dep.yaml 
  169  kubectl autoscale deployment php-apache --cpu-percent=50 --min=1 --max=10
  170  lllllllll
  171  kubectl get pod
  172  kubectl get nodes
  173  kubectl get pod
  174  kubectl get hpa
  175  kubectl get pod
  176  kubectl get hpa
  177  kubectl get pod
  178  kubectl get hpa
  179  kubectl get pod
  180  kubectl get hpa
  181  kubectl get pod
  182  kubectl get hpa
  183  cd myapp/CT-new/
  184  vi kops.sh 
  185  mv .k-dep.yaml.swp k-dep.yaml
  186  vi k-dep.yaml 
  187  rm k-dep.yaml 
  188  vi k-dep.yaml
  189  kubectl get deployments.apps 
  190  kubectl get hpa
  191  ls
  192  kubectl run -i --tty load-generator --rm --image=busybox:1.28 --restart=Never -- /bin/sh -c "while sleep 0.01; do wget -q -O- http://php-apache; done"
  193  kubectl get pod
  194  kubectl top pod
  195  kubectl top nodes
  196  kubectl get pod -n kube-system 
  197  kubectl get deployments.apps -n kube-system 
  198  cd myapp/CT-new/
  199  ls
  200  vi deployment.yaml 
  201  cd myapp/CT-new/
  202  ls
  203  cp deployment.yaml liv-exec.yaml
  204  vi liv-exec.yaml 
  205  kubectl create -f liv-exec.yaml 
  206  vi liv-exec.yaml 
  207  kubectl create -f liv-exec.yaml 
  208  kubectl get pod
  209  kubectl describe pod mydep-liv-exec-6bf6d5cb44-cc74t
  210  kubectl get pod
  211  vi liv-exec.yaml 
  212  kubectl get pod
  213  kubectl exec -it mydep-liv-exec-6bf6d5cb44-cc74t -- bash
  214  kubectl delete -f liv-exec.yaml 
  215  vi liv-exec.yaml 
  216  kubectl create -f liv-exec.yaml 
  217  kubectl get pod
  218  kubectl describe pod mydep-liv-exec-778577c567-79wq6
  219  kubectl get pod
  220  kubectl describe pod mydep-liv-exec-778577c567-79wq6
  221  kubectl get pod
  222  kubectl delete -f liv-exec.yaml 
  223  cp liv-exec.yaml liv-http.yaml 
  224  vi liv-http.yaml 
  225  kubectl create -f liv-http.yaml 
  226  vi liv-http.yaml 
  227  kubectl create -f liv-http.yaml 
  228  vi liv-http.yaml 
  229  kubectl create -f liv-http.yaml 
  230  kubectl get pod
  231  kubectl describe pod mydep-liv-http-58995569d-mqw4m
  232  kubectl delete -f liv-http.yaml 
  233  vi liv-http.yaml 
  234  kubectl create -f liv-http.yaml 
  235  kubectl get pod
  236  kubectl describe pod mydep-liv-http-565cb7c998-27nh2
  237  kops export aneesh-mykube.k8s.local --admin
  238  history | grep "kops"
  239  kops export aneesh-mykube.k8s.local --admin --state=s3://aneesh-mykops123
  240  kops export kubeconfig aneesh-mykube.k8s.local --admin --state=s3://aneesh-mykops123
  241  kubectl get pod
  242  kubectl delete -f liv-http.yaml 
  243  vi liv-http.yaml 
  244  kubectl get pod
  245  kubectl create -f liv-http.yaml 
  246  kubectl get pod
  247  kubectl describe pod mydep-liv-http-565cb7c998-dc9c6
  248  kubectl get pod
  249  kubectl delete -f liv-http.yaml 
  250  cp liv-http.yaml liv-tcp.yaml
  251  vi liv-tcp.yaml
  252  kubectl create -f liv-tcp.yaml 
  253  kubectl get pod
  254  vi liv-tcp.yaml 
  255  vi liv-http.yaml 
  256  vi liv-exec.yaml 
  257  kubectl create -f liv-exec.yaml 
  258  kubectl get pod
  259  kubectl describe pod mydep-liv-exec-54fd7cb946-2qws5
  260  vi liv-exec.yaml 
  261  history >> cmd.txt 
  262  ./gitt.sh "deploy healthProbe"
  263  cd myapp/CT-new/
  264  vi job.yaml 
  265  kubectl create -f job.yaml 
  266  kubectl get pod
  267  kubectl delete -f job.yaml 
  268  vi job.yaml 
  269  kubectl create -f job.yaml 
  270  kubectl get pod
  271  kubectl delete -f job.yaml 
  272  vi cron-job.yaml
  273  kubectl create -f cron-job.yaml 
  274  kubectl get cronjobs.batch 
  275  kubectl get pod
  276  kubectl logs hello-27589575-64jr6
  277  kubectl get pod
  278  kubectl delete -f cron-job.yaml 
  279  cp 
  280  cp deployment.yaml emp-vol.yaml
  281  vi emp-vol.yaml 
  282  kubectl create -f emp-vol.yaml 
  283  vi emp-vol.yaml 
  284  kubectl create -f emp-vol.yaml 
  285  kubectl get pod
  286  kubectl describe pod mydep-emp-vol-5d8ff48c8f-2l7w8
  287  kubectl get pod
  288  kubectl exec -it mydep-emp-vol-5d8ff48c8f-2l7w8 -c con1 -- bash
  289  kubectl exec -it mydep-emp-vol-5d8ff48c8f-2l7w8 -c con2 -- bash
  290  kubectl delete pod mydep-emp-vol-5d8ff48c8f-2l7w8
  291  ./gitt.sh "emptyDir vol"
  292  vi emp-vol.yaml 
  293  vi hostpath-vol.yaml
  294  vi daemonset.yaml 
  295  vi hostpath-vol.yaml 
  296  history >> cmd.txt 
    1  vi kops.sh
    2  vi kops.sh
    3  rm .kops.sh.swp 
    4  sh kops.sh 
    5  #kops create cluster --name=aneesh-mykube.k8s.local --state=s3://aneesh-mykops123 --zones=ap-south-1a --node-count=2 --node-size=t2.medium --master-size=t2.medium --yes
    6  kops create cluster --name=aneesh-mykube.k8s.local --state=s3://aneesh-mykops123 --zones=ap-south-1a --node-count=2 --node-size=t2.medium --master-size=t2.medium --yes
    7  aws configure
    8  kops create cluster --name=aneesh-mykube.k8s.local --state=s3://aneesh-mykops123 --zones=ap-south-1a --node-count=2 --node-size=t2.medium --master-size=t2.medium --yes
    9  kops dele cluster --name=aneesh-mykube.k8s.local --state=s3://aneesh-mykops123  --yes
   10  kops delete cluster --name=aneesh-mykube.k8s.local --state=s3://aneesh-mykops123  --yes
   11  aws configure
   12  kops create cluster --name=aneesh-mykube.k8s.local --state=s3://aneesh-mykops123 --zones=ap-south-1a --node-count=2 --node-size=t2.medium --master-size=t2.medium --yes
   13  aws configure
   14  kops create cluster --name=aneesh-mykube.k8s.local --state=s3://aneesh-mykops123 --zones=ap-south-1a --node-count=2 --node-size=t2.medium --master-size=t2.medium --yes
   15  kops delete cluster --name=aneesh-mykube.k8s.local --state=s3://aneesh-mykops123  --yes
   16  kops create cluster --name=aneesh-mykube.k8s.local --state=s3://aneesh-mykops123 --zones=ap-south-1a --node-count=2 --node-size=t2.medium --master-size=t2.medium --yes
   17  mkdir myapp
   18  cd myapp/
   19  git clone git@github.com:aneeshansaricloud/CT-new.git
   20  #ssh-keygen -t ed25519 -C "aneeshansaricloud@gmail.com"
   21  ssh-keygen -t ed25519 -C "aneeshansaricloud@gmail.com"
   22  cd 
   23  cd .ssh/
   24  cat id_ed25519.pub 
   25  cd -
   26  cd myapp/
   27  ls
   28  cd 
   29  ls
   30  cd myapp/
   31  ls
   32  #ssh-keygen -t ed25519 -C "aneeshansaricloud@gmail.com"
   33  git clone git@github.com:aneeshansaricloud/CT-new.git
   34  ls
   35  cd CT-new/
   36  ls
   37  vi test.yaml 
   38  ./gitt.sh 
   39  vi test.yaml 
   40  ./gitt.sh 
   41  ./gitt.sh "blabla"
   42  kubectl get nodes
   43  cd
   44  vi .bashrc 
   45  source .bashrc 
   46  kubectl get nodes
   47  ls
   48  cd myapp/CT-new/
   49  ls
   50  vi rc.yaml 
   51  vi replicaset.yaml 
   52  cp replicaset.yaml deployment.yaml
   53  vi deployment.yaml 
   54  vi rc.yaml 
   55  vi replicaset.yaml 
   56  vi deployment.yaml 
   57  kubectl create -f deployment.yaml 
   58  kubectl get pod
   59  kubectl delete -f deployment.yaml 
   60  kubectl create -f pod.yaml 
   61  kubectl get pod --show-labels 
   62  kubectl delete -f pod.yaml 
   63  vi pod.yaml 
   64  kubectl create -f pod.yaml 
   65  kubectl get pod --show-labels 
   66  vi deployment.yaml 
   67  kubectl create -f deployment.yaml 
   68  kubectl get deployments.apps 
   69  kubectl get pod
   70  kubectl get deployments.apps --show-labels 
   71  kubectl get pod --show-labels 
   72  kubectl get replicasets.apps 
   73  kubectl get deployments.apps -o wide
   74  kubectl describe deployments.apps mydep 
   75  kubectl describe replicasets.apps mydep-646c7fb474 
   76  kubectl describe pod mydep-646c7fb474-564d7
   77  kubectl get deployments.apps -o wide
   78  kubectl get svc
   79  history 
   80  kubectl get deployments.apps -o wide
   81  kubectl set image deployment mydep con1=nginx:latest --record
   82  kubectl get deployments.apps -o wide
   83  kubectl get pod 
   84  kubectl get replicasets.apps 
   85  kubectl describe replicasets.apps mydep-646c7fb474
   86  kubectl get replicasets.apps 
   87  kubectl rollout history deployment mydep 
   88  kubectl rollout history deployment mydep --revision 1
   89  kubectl rollout history deployment mydep --revision 2
   90  kubectl rollout history deployment mydep 
   91  kubectl rollout undo deployment mydep --to-revision 1
   92  kubectl rollout history deployment mydep 
   93  kubectl get deployments.apps -o wide
   94  kubectl get replicasets.apps 
   95  kubectl get pod
   96  vi deployment.yaml 
   97  kubectl delete -f deployment.yaml 
   98  vi deployment.yaml 
   99  kubectl delete -f deployment.yaml 
  100  kubectl create -f deployment.yaml 
  101  kubectl set image deployment mydep con1=nginx:latest 
  102  kubectl rollout history deployment mydep 
  103  kubectl annotate deployments.apps mydep kubernetes.io/change-cause="updating to nginx v1.2"
  104  kubectl rollout history deployment mydep 
  105  vi deployment.yaml 
  106  kubectl edit deployments.apps mydep 
  107  kubectl rollout history deployment mydep 
  108  kubectl get replicasets.apps 
  109  kubectl get pod
  110  kubectl get replicasets.apps 
  111  history >> cmd.txt 
  112  ./gitt.sh "deployment"
  113  cd myapp/CT-new/
  114  ls
  115  kubectl delete -f deployment.yaml 
  116  vi deployment.yaml 
  117  kubectl create -f deployment.yaml 
  118  kubectl get deployments.apps 
  119  kubectl ge tpod
  120  kubectl get pod
  121  kubectl get rs
  122  vi deployment.yaml 
  123  kubectl apply -f deployment.yaml 
  124  kubectl get deployments.apps 
  125  kubectl get rs
  126  kubectl get pod
  127  vi deployment.yaml 
  128  kubectl edit deployments.apps mydep 
  129  vi deployment.yaml 
  130  kubectl get deployments.apps -o wide
  131  kubectl get pod -o wide
  132  kubectl get deployments.apps 
  133  kubectl scale deployment mydep --replicas 8
  134  kubectl get deployments.apps 
  135  kubectl get pod
  136  kubectl scale deployment mydep --replicas 2
  137  kubectl get pod
  138  kubectl autoscale deployment mydep --min 3 --max 10 --cpu-percent 70 --dry-run=clinet -o yaml >> myapp/CT-new/deployment.yaml 
  139  kubectl autoscale deployment mydep --min 3 --max 10 --cpu-percent 70 --dry-run=client -o yaml >> myapp/CT-new/deployment.yaml 
  140  cd myapp/CT-new/
  141  vi deployment.yaml 
  142  kubectl autoscale deployment mydep --min 3 --max 10 --cpu-percent 70
  143  kubectl get hpa
  144  vi deployment.yaml 
  145  cd myapp/CT-new/
  146  ls
  147  vi deployment.yaml 
  148  kubectl get pod 
  149  kubectl describe pod mydep-646c7fb474-2bw6z
  150  vi deployment.yaml 
  151  kubectl delete -f deployment.yaml 
  152  kubectl create -f deployment.yaml 
  153  vi deployment.yaml 
  154  kubectl get pod
  155  kubectl describe pod mydep-5769978bd5-7vljz
  156  kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml
  157  kubectl get pod -n kube-system 
  158  kubectl get hpa
  159  kubectl get pod
  160  kubectl delete -f deployment.yaml 
  161  cd myapp/CT-new/
  162  ls
  163  cd myapp/CT-new/
  164  vi deployment.yaml 
  165  cd myapp/CT-new/
  166  vi k-dep.yaml
  167  vi k-dep.yaml
  168  kubectl create -f k-dep.yaml 
  169  kubectl autoscale deployment php-apache --cpu-percent=50 --min=1 --max=10
  170  lllllllll
  171  kubectl get pod
  172  kubectl get nodes
  173  kubectl get pod
  174  kubectl get hpa
  175  kubectl get pod
  176  kubectl get hpa
  177  kubectl get pod
  178  kubectl get hpa
  179  kubectl get pod
  180  kubectl get hpa
  181  kubectl get pod
  182  kubectl get hpa
  183  cd myapp/CT-new/
  184  vi kops.sh 
  185  mv .k-dep.yaml.swp k-dep.yaml
  186  vi k-dep.yaml 
  187  rm k-dep.yaml 
  188  vi k-dep.yaml
  189  kubectl get deployments.apps 
  190  kubectl get hpa
  191  ls
  192  kubectl run -i --tty load-generator --rm --image=busybox:1.28 --restart=Never -- /bin/sh -c "while sleep 0.01; do wget -q -O- http://php-apache; done"
  193  kubectl get pod
  194  kubectl top pod
  195  kubectl top nodes
  196  kubectl get pod -n kube-system 
  197  kubectl get deployments.apps -n kube-system 
  198  cd myapp/CT-new/
  199  ls
  200  vi deployment.yaml 
  201  cd myapp/CT-new/
  202  ls
  203  cp deployment.yaml liv-exec.yaml
  204  vi liv-exec.yaml 
  205  kubectl create -f liv-exec.yaml 
  206  vi liv-exec.yaml 
  207  kubectl create -f liv-exec.yaml 
  208  kubectl get pod
  209  kubectl describe pod mydep-liv-exec-6bf6d5cb44-cc74t
  210  kubectl get pod
  211  vi liv-exec.yaml 
  212  kubectl get pod
  213  kubectl exec -it mydep-liv-exec-6bf6d5cb44-cc74t -- bash
  214  kubectl delete -f liv-exec.yaml 
  215  vi liv-exec.yaml 
  216  kubectl create -f liv-exec.yaml 
  217  kubectl get pod
  218  kubectl describe pod mydep-liv-exec-778577c567-79wq6
  219  kubectl get pod
  220  kubectl describe pod mydep-liv-exec-778577c567-79wq6
  221  kubectl get pod
  222  kubectl delete -f liv-exec.yaml 
  223  cp liv-exec.yaml liv-http.yaml 
  224  vi liv-http.yaml 
  225  kubectl create -f liv-http.yaml 
  226  vi liv-http.yaml 
  227  kubectl create -f liv-http.yaml 
  228  vi liv-http.yaml 
  229  kubectl create -f liv-http.yaml 
  230  kubectl get pod
  231  kubectl describe pod mydep-liv-http-58995569d-mqw4m
  232  kubectl delete -f liv-http.yaml 
  233  vi liv-http.yaml 
  234  kubectl create -f liv-http.yaml 
  235  kubectl get pod
  236  kubectl describe pod mydep-liv-http-565cb7c998-27nh2
  237  kops export aneesh-mykube.k8s.local --admin
  238  history | grep "kops"
  239  kops export aneesh-mykube.k8s.local --admin --state=s3://aneesh-mykops123
  240  kops export kubeconfig aneesh-mykube.k8s.local --admin --state=s3://aneesh-mykops123
  241  kubectl get pod
  242  kubectl delete -f liv-http.yaml 
  243  vi liv-http.yaml 
  244  kubectl get pod
  245  kubectl create -f liv-http.yaml 
  246  kubectl get pod
  247  kubectl describe pod mydep-liv-http-565cb7c998-dc9c6
  248  kubectl get pod
  249  kubectl delete -f liv-http.yaml 
  250  cp liv-http.yaml liv-tcp.yaml
  251  vi liv-tcp.yaml
  252  kubectl create -f liv-tcp.yaml 
  253  kubectl get pod
  254  vi liv-tcp.yaml 
  255  vi liv-http.yaml 
  256  vi liv-exec.yaml 
  257  kubectl create -f liv-exec.yaml 
  258  kubectl get pod
  259  kubectl describe pod mydep-liv-exec-54fd7cb946-2qws5
  260  vi liv-exec.yaml 
  261  history >> cmd.txt 
  262  ./gitt.sh "deploy healthProbe"
  263  cd myapp/CT-new/
  264  vi deployment.yaml 
  265  mkdir wordpress
  266  cd wordpress/
  267  ls
  268  cp ../deployment.yaml .
  269  vi deployment.yaml 
  270  cp deployment.yaml mysql.yaml
  271  mv deployment.yaml wordpress.yaml
  272  ls
  273  vi mysql.yaml 
  274  vi wordpress.yaml 
  275  ls
  276  kubectl create -f .
  277  vi wordpress.yaml 
  278  kubectl create -f wordpress.yaml 
  279  kubectl get pod
  280  kubectl delete deployments.apps mydep-liv-exec mydep-liv-tcp 
  281  kubectl get pod
  282  kubectl delete pod load-generator mypod
  283  kubectl delete deployments.apps php-apache 
  284  kubectl get pod
  285  kubectl get svc
  286  kubectl delete svc php-apache 
  287  kubectl get svc
  288  vi mysql.yaml 
  289  kubectl delete -f mysql.yaml 
  290  vi mysql.yaml 
  291  vi wordpress.yaml 
  292  vi mysql.yaml 
  293  kubectl delete -f .
  294  kubectl create -f .
  295  kubectl get pod
  296  vi wordpress.yaml 
  297  vi mysql.yaml 
  298  kubectl get svc
  299  kubectl delete -f .
  300  vi wordpress.yaml 
  301  vi mysql.yaml 
  302  vi wordpress.yaml 
  303  kubectl create -f .
  304  kubectl get pod
  305  kubectl get pod -o wide 
  306  vi ../deployment.yaml 
  307  kubectl create -f ../deployment.yaml 
  308  kubectl get pod -o wide 
  309  cd ..
  310  ls
  311  vi daemonset.yaml
  312  cp deployment.yaml daemonset.yaml
  313  vi daemonset.yaml 
  314  cd myapp/CT-new/
  315  ls
  316  vi job.yaml
  317  vi job.yaml 
  318  kubectl create -f job.yaml 
  319  kubectl get pod
  320  kubectl delete -f job.yaml 
  321  cd myapp/CT-new/
  322  vi job.yaml 
  323  kubectl create -f job.yaml 
  324  kubectl get pod
  325  kubectl delete -f job.yaml 
  326  vi job.yaml 
  327  kubectl create -f job.yaml 
  328  kubectl get pod
  329  kubectl delete -f job.yaml 
  330  vi cron-job.yaml
  331  kubectl create -f cron-job.yaml 
  332  kubectl get cronjobs.batch 
  333  kubectl get pod
  334  kubectl logs hello-27589575-64jr6
  335  kubectl get pod
  336  kubectl delete -f cron-job.yaml 
  337  cp 
  338  cp deployment.yaml emp-vol.yaml
  339  vi emp-vol.yaml 
  340  kubectl create -f emp-vol.yaml 
  341  vi emp-vol.yaml 
  342  kubectl create -f emp-vol.yaml 
  343  kubectl get pod
  344  kubectl describe pod mydep-emp-vol-5d8ff48c8f-2l7w8
  345  kubectl get pod
  346  kubectl exec -it mydep-emp-vol-5d8ff48c8f-2l7w8 -c con1 -- bash
  347  kubectl exec -it mydep-emp-vol-5d8ff48c8f-2l7w8 -c con2 -- bash
  348  kubectl delete pod mydep-emp-vol-5d8ff48c8f-2l7w8
  349  ./gitt.sh "emptyDir vol"
  350  vi emp-vol.yaml 
  351  vi hostpath-vol.yaml
  352  vi daemonset.yaml 
  353  vi hostpath-vol.yaml 
  354  history >> cmd.txt 
  355  ./gitt.sh "hostpath "
  356  init 0
  357  ls
  358  cd myapp/
  359  ls
  360  cd CT-new/
  361  ls
  362  kubectl get pod
  363  history | grep "kops"
  364  kops export kubeconfig aneesh-mykube.k8s.local --admin --state=s3://aneesh-mykops123
  365  kubectl get pod
  366  ls
  367  kubectl get pod
  368  kubectl delete -f .
  369  kubectl get pod
  370  vi state.yaml
  371  kubectl create -f state.yaml 
  372  kubectl get pod
  373  kubectl delete pod web-0
  374  kubectl get pod
  375  kubectl delete pod web-2
  376  kubectl get pod
  377  cd wordpress/
  378  ls
  379  kubectl get rs
  380  cd ..
  381  mkdir stateful
  382  cd stateful/
  383  cp ../wordpress/mysql.yaml .
  384  cp ../state.yaml .
  385  ls
  386  vi mysql.yaml 
  387  mv mysql.yaml deploy.yaml
  388  ls
  389  vi deploy.yaml 
  390  cp ../pod.yaml 
  391  cp ../pod.yaml .
  392  vi pod.yaml 
  393  kubectl create -f pod.yaml 
  394  kubectl get pod
  395  vi deploy.yaml 
  396  kubectl create -f deploy.yaml 
  397  kubectl delete -f state.yaml 
  398  kubectl get pod
  399  kubectl get svc
  400  kubectl exec -it mypod -- bash
  401  kubectl get pod
  402  kubectl get svc
  403  kubectl exec -it mypod -- bash
  404  kubectl get pod
  405  vi state.yaml 
  406  kubectl get svc
  407  vi state.yaml 
  408  kubectl create -f state.yaml 
  409  kubectl get pod
  410  kubectl get svc
  411  kubectl exec -it mypod -- bash
  412  kubectl get pod -o wide
  413  kubectl exec -it mypod -- bash
  414  kubectl get pod
  415  kubectl delete pod mydep-dep-65c8f74bbf-4vhbh
  416  kubectl get pod
  417  kubectl delete pod web-0
  418  kubectl get pod
  419  kubectl delete -f state.yaml 
  420  kubectl get sc
  421  cp state.yaml state-vol.yaml 
  422  vi state-vol.yaml 
  423  kubectl create -f state-vol.yaml 
  424  vi state-vol.yaml 
  425  kubectl create -f state-vol.yaml 
  426  vi state-vol.yaml 
  427  kubectl create -f state-vol.yaml 
  428  kubectl get pod
  429  kubectl describe pod web-0
  430  kubectl get pod
  431  kubectl get pvc
  432  cd ..
  433  ./gitt.sh "statefulset"
  434  history >> cmd.txt
apt update && apt install dnsutils -y
 nslookup nginx
 nslookup web-0.nginx.default.svc.cluster.local
    1  kubectl get secrets 
    2  echo aneesh
    3  echo aneesh | base64 
    4  echo YW5lZXNoCg== | base64 --decode 
    5  cd myapp/CT-new/
    6  mkdir secret
    7  cd secret/
    8  ls
    9  cp ../wordpress/mysql.yaml .
   10  vi mysql.yaml 
   11  kubectl create secret generic mypass --from-literal test123 --dry-run=client -o yaml
   12  kubectl create secret generic mypass --from-literal password=test123 --dry-run=client -o yaml
   13  kubectl create secret generic mypass --from-literal password=test123 
   14  kubectl get secrets 
   15  kubectl describe secrets mypass 
   16  kubectl get secrets mypass -o yaml
   17  echo dGVzdDEyMw== | base64 --decode 
   18  vi mysql.yaml 
   19  kubectl create -f mysql.yaml 
   20  kubectl get pod
   21  kubectl describe pod mysql-dep-db447c67-29lxk 
   22  kubectl get pod
   23  kubectl exec -it mysql-dep-db447c67-29lxk -- bash
   24  vi mysql.yaml 
   25  cp mysql.yaml deploy.yaml
   26  vi deploy.yaml 
   27  vi pass.txt
   28  kubectl create secret generic myfile --from-file pass.txt 
   29  kubectl get secrets 
   30  kubectl describe secrets myfile 
   31  kubectl get secrets myfile -o yaml
   32  vi deploy.yaml 
   33  kubectl get pod
   34  kubectl delete -f .
   35  kubectl get pod
   36  kubectl create -f deploy.yaml 
   37  vi deploy.yaml 
   38  kubectl create -f deploy.yaml 
   39  kubectl get pod
   40  kubectl describe pod mysql-dep-76f5f59bfb-cs7h7
   41  kubectl get pod
   42  kubectl exec -it mysql-dep-76f5f59bfb-cs7h7 -- bash
   43  kubectl get configmaps 
   44  kubectl describe configmaps myenv
   45  kubectl describe configmaps myfile
   46  kubectl get configmaps 
   47  kubectl describe configmaps myindex
   48  kubectl get configmaps myindex -o yaml
   49  echo aGVsbG8sIHRoaXMgaXMgZmlsZS4uCg==  | base64 --decode 
   50  kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.5.0/aio/deploy/recommended.yaml
   51  kubectl get pod -n kubernetes-dashboard 
   52  kubectl get svc -n kubernetes-dashboard 
   53  kubectl get svc 
   54  kubectl edit svc kubernetes-dashboard -n kubernetes-dashboard 
   55  kubectl get svc 
   56  kubectl get svc -n kubernetes-dashboard 
   57  kubectl create serviceaccount dashboard-admin-sa
   58  kubectl get secrets 
   59  kubectl describe secrets dashboard-admin-sa-token-jzvcn
   60  kubectl create clusterrolebinding dashboard-admin-sa --clusterrole=cluster-admin --serviceaccount=default:dashboard-admin-sa
   61  kubectl get clusterrolebindings.rbac.authorization.k8s.io 
   62  kubectl get clusterrole
   63* kubectl describe secrets dashboard-admin-sa-token-jzvc
   64  kubectl get svc
   65  kubectl get svc -n kubernetes-dashboard 
   66  cd ..
   67  ls
   68  history >> cmd.txt 
    1  kubectl get secrets 
    2  echo aneesh
    3  echo aneesh | base64 
    4  echo YW5lZXNoCg== | base64 --decode 
    5  cd myapp/CT-new/
    6  mkdir secret
    7  cd secret/
    8  ls
    9  cp ../wordpress/mysql.yaml .
   10  vi mysql.yaml 
   11  kubectl create secret generic mypass --from-literal test123 --dry-run=client -o yaml
   12  kubectl create secret generic mypass --from-literal password=test123 --dry-run=client -o yaml
   13  kubectl create secret generic mypass --from-literal password=test123 
   14  kubectl get secrets 
   15  kubectl describe secrets mypass 
   16  kubectl get secrets mypass -o yaml
   17  echo dGVzdDEyMw== | base64 --decode 
   18  vi mysql.yaml 
   19  kubectl create -f mysql.yaml 
   20  kubectl get pod
   21  kubectl describe pod mysql-dep-db447c67-29lxk 
   22  kubectl get pod
   23  kubectl exec -it mysql-dep-db447c67-29lxk -- bash
   24  vi mysql.yaml 
   25  cp mysql.yaml deploy.yaml
   26  vi deploy.yaml 
   27  vi pass.txt
   28  kubectl create secret generic myfile --from-file pass.txt 
   29  kubectl get secrets 
   30  kubectl describe secrets myfile 
   31  kubectl get secrets myfile -o yaml
   32  vi deploy.yaml 
   33  kubectl get pod
   34  kubectl delete -f .
   35  kubectl get pod
   36  kubectl create -f deploy.yaml 
   37  vi deploy.yaml 
   38  kubectl create -f deploy.yaml 
   39  kubectl get pod
   40  kubectl describe pod mysql-dep-76f5f59bfb-cs7h7
   41  kubectl get pod
   42  kubectl exec -it mysql-dep-76f5f59bfb-cs7h7 -- bash
   43  kubectl get configmaps 
   44  kubectl describe configmaps myenv
   45  kubectl describe configmaps myfile
   46  kubectl get configmaps 
   47  kubectl describe configmaps myindex
   48  kubectl get configmaps myindex -o yaml
   49  echo aGVsbG8sIHRoaXMgaXMgZmlsZS4uCg==  | base64 --decode 
   50  kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.5.0/aio/deploy/recommended.yaml
   51  kubectl get pod -n kubernetes-dashboard 
   52  kubectl get svc -n kubernetes-dashboard 
   53  kubectl get svc 
   54  kubectl edit svc kubernetes-dashboard -n kubernetes-dashboard 
   55  kubectl get svc 
   56  kubectl get svc -n kubernetes-dashboard 
   57  kubectl create serviceaccount dashboard-admin-sa
   58  kubectl get secrets 
   59  kubectl describe secrets dashboard-admin-sa-token-jzvcn
   60  kubectl create clusterrolebinding dashboard-admin-sa --clusterrole=cluster-admin --serviceaccount=default:dashboard-admin-sa
   61  kubectl get clusterrolebindings.rbac.authorization.k8s.io 
   62  kubectl get clusterrole
   63* kubectl describe secrets dashboard-admin-sa-token-jzvc
   64  kubectl get svc
   65  kubectl get svc -n kubernetes-dashboard 
   66  cd ..
   67  ls
   68  history >> cmd.txt 
   69  ./gitt.sh "dashboard secret"
   70  vi pod.yaml 
   71  history >> cmd.txt 
    1  mkdir myapp
    2  cd myapp/
    3  git@github.com:aneeshansaricloud/CT-new.git
    4  git clone git@github.com:aneeshansaricloud/CT-new.git
    5  ssh-keygen 
    6  cd .ss
    7  cd
    8  cd .ssh/
    9  ls
   10  cat id_rsa.pub 
   11  rm id_*
   12  ls
   13  lscpu 
   14  cd
   15  ssh-keygen -t ed25519 -C "aneeshansaricloud@gmail.com"
   16  eval "$(ssh-agent -s)"
   17  cd .ssh/
   18  ls
   19  cat id_ed25519.pub 
   20  git clone git@github.com:aneeshansaricloud/CT-new.git
   21  ls
   22  rm -rf CT-new/
   23  ls
   24  cd
   25  cd myapp/
   26  git clone git@github.com:aneeshansaricloud/CT-new.git
   27  cd CT-new/
   28  ls
   29  vi test.yaml 
   30  ./gitt.sh "new"
   31  ls
   32  sh kops.sh 
   33  cat cmd.txt | grep "kops"
   34  kops create cluster --name=aneesh-mykube1.k8s.local --state=s3://aneesh-mykops --zones=ap-south-1a --node-count=2 --node-size=t2.medium --master-size=t2.medium --yes
   35  aws configure
   36  kops create cluster --name=aneesh-mykube1.k8s.local --state=s3://aneesh-mykops --zones=ap-south-1a --node-count=2 --node-size=t2.medium --master-size=t2.medium --yes
   37  kops delete cluster --name=aneesh-mykube1.k8s.local --state=s3://aneesh-mykops 
   38  kops delete cluster --name=aneesh-mykube1.k8s.local --state=s3://aneesh-mykops --yes
   39  kops create cluster --name=aneesh-mykube1.k8s.local --state=s3://aneesh-mykops --zones=ap-south-1a --node-count=2 --node-size=t2.medium --master-size=t2.medium --yes
   40  aws s3 ls
   41  ll
   42  cd
   43  vi .bashrc 
   44  source .bashrc 
   45  kops validate cluster --name aneesh-mykube1.k8s.local --state=s3://aneesh-mykops 
   46  kubectl get nodes
   47  cd myapp/CT-new/
   48  ls
   49  vi ini
   50  ls
   51  ls 
   52  ls -a
   53  cd
   54  vi .bashrc 
   55  l
   56  ls
   57  cd myapp/
   58  l
   59  cd CT-new/
   60  ls
   61  l
   62  cp deployment.yaml init-container.yaml
   63  vi init-container.yaml 
   64  cp emp-vol.yaml init-container.yaml
   65  vi init-container.yaml 
   66  vi wordpress/wordpress.yaml 
   67  vi init-container.yaml 
   68  kubectl create -f init-container.yaml 
   69  kubectl get pod
   70  kubectl delete -f init-container.yaml 
   71  vi init-container.yaml 
   72  kubectl create -f init-container.yaml 
   73  vi init-container.yaml 
   74  kubectl delete -f init-container.yaml 
   75  kubectl create -f init-container.yaml 
   76  kubectl get pod
   77  vi init-container.yaml 
   78  kubectl delete -f init-container.yaml 
   79  kubectl create -f init-container.yaml 
   80  kubectl get pod
   81  mkdir volume
   82  cd volume/
   83  vi pvc.yaml
   84  kubectl get pvc
   85  kubectl get sc
   86  vi pvc.yaml
   87  kubectl create -f pvc.yaml 
   88  kubectl get pvc
   89  kubectl describe pvc myclaim
   90  cp ../pod.yaml .
   91  vi pod.yaml 
   92  kubectl get pvc
   93  vi pod.yaml 
   94  kubectl create -f pod.yaml 
   95  kubectl get pod
   96  kubectl describe pod mypod
   97  kubectl get pod
   98  kubectl get pvc
   99  kubectl get sc
  100  cd ..
  101  mkdir configmap
  102  cd configmap/
  103  cp ../wordpress/* .
  104  ls
  105  cp ../init-container.yaml .
  106  ls
  107  mv init-container.yaml deploy.yaml
  108  vi deploy.yaml 
  109  vi wordpress.yaml 
  110  #kubectl create configmap myenv --from-literal 
  111  vi deploy.yaml 
  112  vi wordpress.yaml 
  113  kubectl create configmap myenv --from-literal WORDPRESS_DB_HOST=mysql-svc --from-literal WORDPRESS_DB_USER=root
  114  kubectl delete configmaps myenv 
  115  kubectl create configmap myenv --from-literal WORDPRESS_DB_HOST=mysql-svc --from-literal WORDPRESS_DB_USER=root --from-literal WORDPRESS_DB_PASSWORD=test123 --from-literal WORDPRESS_DB_NAME=testdb --from-literal WORDPRESS_TABLE_PREFIX=wp_
  116  kubectl delete configmaps myenv 
  117  kubectl create configmap myenv --from-literal WORDPRESS_DB_HOST=mysql-svc --from-literal WORDPRESS_DB_USER=root --from-literal WORDPRESS_DB_PASSWORD=test123 --from-literal WORDPRESS_DB_NAME=testdb --from-literal WORDPRESS_TABLE_PREFIX=wp_  --dry-run=client -o yaml
  118  kubectl create configmap myenv --from-literal WORDPRESS_DB_HOST=mysql-svc --from-literal WORDPRESS_DB_USER=root --from-literal WORDPRESS_DB_PASSWORD=test123 --from-literal WORDPRESS_DB_NAME=testdb --from-literal WORDPRESS_TABLE_PREFIX=wp_  --dry-run=client -o yaml > config.yaml
  119  vi config.yaml 
  120  kubectl create -f config.yaml 
  121  kubectl get configmaps 
  122  kubectl describe configmaps myenv 
  123  kubectl edit configmaps myenv 
  124  kubectl get configmaps 
  125  vi wordpress.yaml 
  126  kubectl create -f wordpress.yaml 
  127  kubectl get svc
  128  kubectl delete -f deploy.yaml 
  129  kubectl create -f wordpress.yaml 
  130  kubectl get pods
  131  kubectl get svc
  132  kubectl describe pod wordpress-68f8558bd5-dttwn
  133  kubectl get pod
  134  kubectl exec -it wordpress-68f8558bd5-dttwn -- bash
  135  kubectl get pod
  136  ls
  137  vi deploy.yaml 
  138  kubectl delete -f wordpress.yaml 
  139  kubectl create -f deploy.yaml 
  140  vi deploy.yaml 
  141  vi index.html
  142  ls
  143  kubectl create configmap myindex --from-file index.html --dry-run=client -o yaml
  144  kubectl create configmap myindex --from-file index.html --dry-run=client -o yaml > myindex.yaml
  145  vi myindex.yaml 
  146  kubectl create configmap myindex --from-file index.html 
  147  kubectl get configmaps 
  148  kubectl get pod
  149  kubectl delete -f deploy.yaml 
  150  vi deploy.yaml 
  151  kubectl get configmaps 
  152  vi deploy.yaml 
  153  kubectl create -f deploy.yaml 
  154  vi deploy.yaml 
  155  kubectl create -f deploy.yaml 
  156  kubectl get pod
  157  kubectl get svc
  158  kubectl describe pod mydep-init-con-7d95d68c76-twvb5
  159  cd ..
  160  ./gitt.sh "configmap"
  161  kubectl get secrets 
  162  echo aneesh
  163  echo aneesh | base64 
  164  echo YW5lZXNoCg== | base64 --decode 
  165  cd myapp/CT-new/
  166  mkdir secret
  167  cd secret/
  168  ls
  169  cp ../wordpress/mysql.yaml .
  170  vi mysql.yaml 
  171  kubectl create secret generic mypass --from-literal test123 --dry-run=client -o yaml
  172  kubectl create secret generic mypass --from-literal password=test123 --dry-run=client -o yaml
  173  kubectl create secret generic mypass --from-literal password=test123 
  174  kubectl get secrets 
  175  kubectl describe secrets mypass 
  176  kubectl get secrets mypass -o yaml
  177  echo dGVzdDEyMw== | base64 --decode 
  178  vi mysql.yaml 
  179  kubectl create -f mysql.yaml 
  180  kubectl get pod
  181  kubectl describe pod mysql-dep-db447c67-29lxk 
  182  kubectl get pod
  183  kubectl exec -it mysql-dep-db447c67-29lxk -- bash
  184  vi mysql.yaml 
  185  cp mysql.yaml deploy.yaml
  186  vi deploy.yaml 
  187  vi pass.txt
  188  kubectl create secret generic myfile --from-file pass.txt 
  189  kubectl get secrets 
  190  kubectl describe secrets myfile 
  191  kubectl get secrets myfile -o yaml
  192  vi deploy.yaml 
  193  kubectl get pod
  194  kubectl delete -f .
  195  kubectl get pod
  196  kubectl create -f deploy.yaml 
  197  vi deploy.yaml 
  198  kubectl create -f deploy.yaml 
  199  kubectl get pod
  200  kubectl describe pod mysql-dep-76f5f59bfb-cs7h7
  201  kubectl get pod
  202  kubectl exec -it mysql-dep-76f5f59bfb-cs7h7 -- bash
  203  kubectl get configmaps 
  204  kubectl describe configmaps myenv
  205  kubectl describe configmaps myfile
  206  kubectl get configmaps 
  207  kubectl describe configmaps myindex
  208  kubectl get configmaps myindex -o yaml
  209  echo aGVsbG8sIHRoaXMgaXMgZmlsZS4uCg==  | base64 --decode 
  210  kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.5.0/aio/deploy/recommended.yaml
  211  kubectl get pod -n kubernetes-dashboard 
  212  kubectl get svc -n kubernetes-dashboard 
  213  kubectl get svc 
  214  kubectl edit svc kubernetes-dashboard -n kubernetes-dashboard 
  215  kubectl get svc 
  216  kubectl get svc -n kubernetes-dashboard 
  217  kubectl create serviceaccount dashboard-admin-sa
  218  kubectl get secrets 
  219  kubectl describe secrets dashboard-admin-sa-token-jzvcn
  220  kubectl create clusterrolebinding dashboard-admin-sa --clusterrole=cluster-admin --serviceaccount=default:dashboard-admin-sa
  221  kubectl get clusterrolebindings.rbac.authorization.k8s.io 
  222  kubectl get clusterrole
  223  kubectl describe secrets dashboard-admin-sa-token-jzvc
  224  kubectl get svc
  225  kubectl get svc -n kubernetes-dashboard 
  226  cd ..
  227  ls
  228  history >> cmd.txt 
  229  ./gitt.sh "dashboard secret"
  230  vi pod.yaml 
  231  history >> cmd.txt 
  232  ./gitt.sh "test"
  233  history | grep "kops"
  234  cat cmd.txt | grep "kops"
  235  kops delete cluster --name=aneesh-mykube1.k8s.local --state=s3://aneesh-mykops  --yes
  236  history | grep "kops create"
  237  history | grep "kops validate"
  238  kops validate cluster --name aneesh-mykube1.k8s.local --state=s3://aneesh-mykops
  239  kubectl get pods
  240  kubectl get nodes
  241  cd myapp/
  242  cd CT-new/
  243  ls
  244  cd
  245  vi .kube/config 
  246  kubectl get ns
  247  kubectl get pod -n kube-system 
  248  kubectl get pod -n kube-public 
  249  kubectl get ns
  250  kubectl create namespace devops 
  251  kubectl get ns
  252  kubectl delete namespaces devops 
  253  kubectl get ns
  254  cd myapp/CT-new/
  255  kubectl get ns
  256  kubectl create namespace devops --dry-run=client -o yaml
  257  kubectl create namespace devops --dry-run=client -o yaml >> namespace.yaml
  258  vi namespace.yaml 
  259  kubectl create -f namespace.yaml 
  260  kubectl get ns
  261  mkdir RBAC
  262  mv namespace.yaml RBAC/
  263  cd RBAC/
  264  ls
  265  cp ../pod.yaml .
  266  ls
  267  vi pod.yaml 
  268  kubectl create -f pod.yaml 
  269  kubectl get pod
  270  kubectl get pod -n devops
  271  kubectl delete -f pod.yaml 
  272  vi pod.yaml 
  273  kubectl create -f pod.yaml -n devops 
  274  kubectl get pod -n devops
  275  kubectl config set-context $(kubectl config current-context) --namespace devops
  276  kubectl get pod
  277  kubectl run test --image nginx:latest --port 80
  278  kubectl get pod
  279  cd
  280  vi .kube/config 
  281  kubectl config set-context $(kubectl config current-context) --namespace default
  282  kubectl get pod
  283  vi .kube/config 
  284  kubectl get ns
  285  vi .kube/config 
  286  kubectl config set-context $(kubectl config current-context) --namespace devops
  287  vi .kube/config 
  288  kubectl get ns
  289  kubectl describe namespaces devops 
  290  cd myapp/CT-new/RBAC/
  291  vi pod.yaml 
  292  kubectl create -f pod.yaml 
  293  kubectl delete -f pod.yaml 
  294  kubectl get pod
  295  kubectl delete pod test  
  296  kubectl get pod
  297  kubectl describe namespaces devops 
  298  kubectl get pod
  299  kubectl create -f pod.yaml 
  300  kubectl get pod
  301  kubectl describe pod mypod 
  302  vi ../deployment.yaml 
  303  cp ../deployment.yaml .
  304  vi deployment.yaml 
  305  kubectl create -f deployment.yaml 
  306  kubectl get pod
  307  kubectl describe pod mydep-5769978bd5-ctns6\
  308  vi pod.yaml 
  309  kubectl delete -f .
  310  vi limit-range.yaml
  311  kubectl create -f limit-range.yaml
  312  kubectl get ns
  313  kubectl create -f namespace.yaml 
  314  kubectl create -f limit-range.yaml
  315  kubectl get ns
  316  kubectl get pos
  317  kubectl get pod
  318  kubectl config set-context $(kubectl config current-context) --namespace default
  319  kubectl get pod
  320  kubectl get ns
  321  kubectl describe namespaces devops 
  322  vi pod.yaml 
  323  kubectl create -f pod.yaml 
  324  kubectl describe pod mypod -n devops
  325  vi pod.yaml 
  326  kubectl delete -f pod.yaml 
  327  vi pod.yaml 
  328* kubectl create -f pod.yaml  
  329  kubectl get pod -n devops 
  330  kubectl describe pod mypod  -n devops 
  331  vi pod.yaml 
  332  vi deployment.yaml 
  333  kubectl create -f deployment.yaml 
  334  kubectl delete -f deployment.yaml 4
  335  kubectl delete -f deployment.yaml
  336  kubectl create -f deployment.yaml  -n devops 
  337  kubectl get pod -n devops 
  338  kubectl describe pod mydep-5769978bd5-fpzzz -n devops 
  339  cd ..
  340  ./gitt.sh "limit-range namespace"
  341  cd 
  342  cd .ssh/
  343  ls
  344  cd -
  345  cd myapp/CT-new/RBAC/
  346  mkdir cert
  347  cd cert/
  348  aws s3 cp s3://$BUCKET/$CLUSTER/pki/private/ca/$KEY ca.key
  349  aws s3 cp s3://aneesh-mykops/aneesh-mykube1.k8s.local/pki/private/ca/$KEY ca.key
  350  echo $KEY
  351  cd ../..
  352  history >> cmd.txt 
